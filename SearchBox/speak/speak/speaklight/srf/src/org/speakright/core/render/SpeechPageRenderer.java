/**
 * Copyright (c) 2007 Ian Rae
 * All Rights Reserved.
 * Licensed under the Eclipse Public License - v 1.0
 * For more information see http://www.eclipse.org/legal/epl-v10.html
 */
package org.speakright.core.render;

import java.util.ArrayList;

import org.speakright.core.SRError;

/**
 * Renders flow objects into a speech page. We use SpeechPage as an abstract
 * representation of a page, so that at this level at least, we're not voicexml
 * specific. The speech page generated by this class is passed to an
 * ISpeechPageWriter for final rendering into voicexml or html or whatever.
 * 
 * I think currently we only have one form per page.
 * 
 * @author IanRaeLaptop
 * 
 */
public class SpeechPageRenderer {
	SRError m_err = new SRError("SpeechPageRenderer"); // tracks our errors

	public SpeechPageRenderer() {
	}

	public SpeechPage render(ArrayList renderL, RenderContext rcontext) {
		SpeechPage page = new SpeechPage();
		SpeechForm form = page.m_form;

		for (int i = 0; i < renderL.size(); i++) {
			IFlowRenderer r = (IFlowRenderer) renderL.get(i);
			r.Render(page, form);

			PromptPipeline pipeline = new PromptPipeline(rcontext);
			GrammarPipeline gramPipeline = new GrammarPipeline(rcontext);

			for (FormElement el : form.m_fieldL) {
				el.renderPrompts(pipeline);
				el.renderGrammars(gramPipeline);
			}

			if (pipeline.failed(m_err)) {
			}

		}
		return page;
	}

	public boolean failed(SRError parent) {
		return m_err.failed(parent);
	}

}
